import { Component, OnInit } from '@angular/core';
import moment from 'moment';
import { NgScrollbarModule } from 'ngx-scrollbar';
import { MaterialModule } from 'src/app/material.module';
import { VulnerabilitiesService } from 'src/app/services/api/vulnerabilities.service';
import { CommonModule } from '@angular/common';
@Component({
  selector: 'app-vulnerability-logs',
  standalone: true,
  imports: [MaterialModule, NgScrollbarModule,CommonModule],
  templateUrl: './vulnerability-logs.component.html',
})
export class VulnerabilityLogsComponent implements  OnInit {
  dataSource:any;
  systemLogsData:any;
  constructor(private vulnerabilitiesService:VulnerabilitiesService){}
  ngOnInit(): void {
      this.getNistSynchronizationLog();
      this.getSystemLog()
  }
  getNistSynchronizationLog(){
    const fromDate = localStorage.getItem('startDate');
    const toDate = localStorage.getItem('endDate');
    const payload = {
      fromDate: fromDate ? moment(fromDate).format('YYYY-MM-DD') : '',
      toDate: toDate ? moment(toDate).format('YYYY-MM-DD') : '',

    };
    this.vulnerabilitiesService.getNistSynchronizationLogs(payload).subscribe((res)=>{
      this.dataSource=res;
      console.log("this.dataSource",this.dataSource)
    })

  }

  getSystemLog(){
    const fromDate = localStorage.getItem('startDate');
    const toDate = localStorage.getItem('endDate');
    const payload = {
      fromDate: fromDate ? moment(fromDate).format('YYYY-MM-DD') : '',
      toDate: toDate ? moment(toDate).format('YYYY-MM-DD') : '',

    };
    this.vulnerabilitiesService.getSystemSynLogs(payload).subscribe((res)=>{
      this.systemLogsData=res;
      // this.dataSource=res;
      // console.log("this.dataSource",this.dataSource)
    })

  }
}
