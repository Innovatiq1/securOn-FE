import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { TablerIconsModule } from 'angular-tabler-icons';
import { MaterialModule } from 'src/app/material.module';
import { VulnerabilitiesService } from 'src/app/services/api/vulnerabilities.service';
import { ScoreChipComponent } from '../../score-chip/score-chip.component';
import { CvssAttribute } from 'src/app/pipe/cvss-attribute.pipe';
import { CommonModule } from '@angular/common';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { debounceTime } from 'rxjs';
import { ToastrService } from 'ngx-toastr';
import * as ExcelJS from 'exceljs';
import FileSaver from 'file-saver';
import { VulnerabilityDataService } from 'src/app/services/api/shared.service';
@Component({
  selector: 'app-cve-vendors-list',
  standalone: true,
  imports: [MaterialModule, TablerIconsModule, ScoreChipComponent,CvssAttribute,CommonModule, FormsModule,ReactiveFormsModule],
  templateUrl: './cve-vendors-list.component.html',
  styleUrl: './cve-vendors-list.component.scss'
})
export class CveVendorsListComponent {
  searchControl: FormControl = new FormControl('');
  vendors: any[] = []; // Array to store vendor names

  constructor(private vulnerabilitiesService: VulnerabilitiesService, private route: ActivatedRoute) {
    // this.vulnerabilitiesService.getAllVendors().subscribe((res) => {
    //   if (res.success) {
    //     this.vendors = res.data; // Assign data to vendors array
    //   }
    //   console.log("this.vendors",this.vendors)
    // });
  }
  ngOnInit() {
    this.route.queryParams.subscribe(params => {
      if (params['vendor']) {
        const vendors = JSON.parse(params['vendor']); 
        this.vendors = vendors;// Convert back to array of objects
        console.log(vendors);
      }
    });
  }
  back() {
    window.history.back();
  }
}

// export class CveVendorsListComponent {
//   searchControl: FormControl = new FormControl("");
//   vendors: string[] = [];
//   constructor(private vulnerabilitiesService:VulnerabilitiesService ){
//     this.vulnerabilitiesService.getAllVendors().subscribe((res)=>{
//       console.log("hello",res)
//       if (res) {
//         this.vendors = res?.data; 
//       }
//     })

//   }

//   back(){
//     window.history.back();
//   }

// }
